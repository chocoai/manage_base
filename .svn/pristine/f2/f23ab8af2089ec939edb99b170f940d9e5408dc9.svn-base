package cn.com.jandar.action.manage.scd;

import java.util.ArrayList;
import java.util.List;

import cn.com.jandar.action.admin.AdminBaseController;
import cn.com.jandar.kit.Constant;
import cn.com.jandar.kit.DbUtil;
import cn.com.jandar.model.Produce;
import cn.com.jandar.model.ProduceDetail;
import cn.com.jandar.model.ProduceDetailDraft;
import cn.com.jandar.model.Scd;
import cn.com.jandar.model.Scdsb;
import cn.com.jandar.model.Scdsbmx;
import cn.com.jandar.model.User;

import com.google.common.collect.Lists;
import com.jfinal.aop.Before;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.tx.Tx;

import cty.kit.route.ButtonBind;
import cty.kit.route.ControllerBind;


@ControllerBind(controllerKey="/manage/scd/sbscd",resource="设备生产单")
public class SbscdController extends AdminBaseController{
	
	
	@ButtonBind(buttonname = "查询")
	public void index(){
		String dhzt = "003"; // 单据状态
        if(this.getPara("dhzt")!=null){
        	dhzt = this.getPara("dhzt");
        }
        
		Page<Scd> page = Scd.getScdList(
				getParaToInt("pageNumber", 1),
				getParaToInt("pageSize", PAGESIZE),
				getPara("orderBy", "p_scd.dh"), getPara("order", "asc"),
				dhzt);
		
		setAttr("page", page);
		setAttr("dhzt", dhzt);
	
		render("sbscd_list.html");
	}
	
	@ButtonBind(buttonname="新增")
	public void add() {
		setAttr("scd", new Scd());
		render("sbscd_input.html");
	}
	
	//@Before(Tx.class)
	@ButtonBind(buttonname="新增")
	public void save() {
		boolean result = true;
		String saveResult = null;
		Scd scd = this.getModel(Scd.class);
		String moxing = this.getPara("moxing");
		String dhzt = DbUtil.readDbString(scd.getStr("dhzt"));
		
		User user = getSessionAttr(User.LOGIN_USER);
		if ("".equals(dhzt)) {
			return;
		}
		
		String dh = DbUtil.readDbString(scd.getStr("dh"));
		List<Scdsb> newScdsbList = new ArrayList<Scdsb>();
		if("".equals(dh)){
			String str  = Constant.findb_goods_dh("030");
			scd.set("DH", str);
			//产品生产信息表
			result = Scd.save(user,scd);
			
			//产品信息设备表
			result = Scdsb.save(user,scd);
			
            if(result){
            	scd= Scd.getscdByDh(str);
            	newScdsbList = Scdsb.query(scd);
            	//根据所选模型保存产品信息明细表
    			Scdsbmx.save(user, newScdsbList, moxing);
            }
			
		}else{
			result = Scd.update(user,scd);
			List<Scdsb> oldScdsbList = Scdsb.query(scd);
			/**
			 * 先删除
			 * */
			Scdsbmx.delete(oldScdsbList);
			Scdsb.delete(scd);
			
			/**
			 * 再保存，在原来操作人，新建时间基础上加更新员和更新时间
			 * */
			result = Scdsb.save(user,scd);
			newScdsbList = Scdsb.query(scd);   
			
			Scdsbmx.save(user, newScdsbList, moxing);
		}
		if ("003".equals(dhzt)) {// 保存已复核
			List<Record> recordList = new ArrayList<Record>();
			recordList = Scdsbmx.query(newScdsbList);
			int scdId = newScdsbList.get(0).getInt("SCDID");
			
			Produce produce = getProduce(scdId);
			
			List<Record> records = Lists.newArrayList();

			for (Record record : recordList) {
				Record e = new Record();
				e.set("deviceid",record.get("DEVICEID"));
				e.set("num", record.get("DNUM"));
				records.add(e);
			}
		saveResult = Produce.saveAll(user, produce, records);
			
		} else if ("002".equals(dhzt)) {// 保存未复核
			
		}
		
		if ((result &&saveResult == null) ||saveResult.equals(Produce.SUCCESS)) {
			this.setAttr("msg", Produce.SUCCESS);
			this.setAttr("redirectionUrl", "/manage/scd/sbscd");
			this.render("../../../admin/common/success.html");
		} else {
			this.setAttr("msg", saveResult);
			this.setAttr("redirectionUrl", "/manage/scd/sbscd");
			this.render("../../../admin/common/error.html");
		}
		
	}
		
	public Produce getProduce(int scdId){
		Record record = Db.findById("p_scd", scdId);
		
		Produce produce = new Produce();
		String CKDH =  Constant.findb_goods_dh("030");
		record.set("CKDH", CKDH);
		Db.update("p_scd", record);
		
		produce.set("dh",CKDH);
		produce.set("SBZT","030");
		produce.set("DHZT",record.getStr("DHZT")); 
		produce.set("CKCKBH",record.getStr("CKCKBH"));
		produce.set("BZ",record.getStr("BZ"));
		produce.set("OPERATOR",record.getStr("OPERATOR"));
		produce.set("OPDATE",record.get("OPDATE"));
		produce.set("UPOPERATOR",record.getStr("UPOPERATOR"));
		produce.set("UPIPDATE",record.get("UPIPDATE"));
		
		
		return produce;
	}
	
	// 已复核单据查看
		@ButtonBind(buttonname = "查看明细")
		public void query() {
			// 得到单号
			String dh = this.getPara("dh");
			Scd scd = Scd.getscdByDh(dh);

			setAttr("scd", scd);

			render("sbscd_input.html");
		}

		// 查询草稿
		@ButtonBind(buttonname = "编辑")
		public void edit() {
			// 得到单号
			String dh = this.getPara("dh");
			Scd scd = Scd.getscdByDh(dh);

			setAttr("scd", scd);

			render("sbscd_input.html");
		}

}
