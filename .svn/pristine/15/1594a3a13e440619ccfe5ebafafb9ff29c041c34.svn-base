package cn.com.jandar.plugin;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import com.jfinal.kit.PathKit;
import com.jfinal.kit.StringKit;
import com.jfinal.plugin.IPlugin;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
/**
 * 字典信息加载
 * @author chenty
 *
 */
public class DicPlugin implements IPlugin{

	public final static Properties properties = new Properties();
	public final static Map<String,Map<String,String>> jkzidian = new HashMap<String,Map<String,String>> ();
	public final static Map<String,List<Record>> jkzidianList = new HashMap<String,List<Record>> ();
	public final static Map<String,String> yyxx= new HashMap<String,String> ();
	public final static List<Record> menuList= new ArrayList<Record> ();
	public final static Map<String,List<Record>> menuofMap= new LinkedHashMap<String,List<Record>>();

	public boolean start() {
		//加载字典
		loadPropertyFile("dic_comm.properties");
		//加载数据字典
		loadJkZidianDb();
		//加载菜单信息
		loadMenuDb();

		return true;
	}

	public boolean stop() {
		return true;
	}

	private Properties loadPropertyFile(String file) {
		if (StringKit.isBlank(file))
			throw new IllegalArgumentException("Parameter of file can not be blank");
		if (file.contains(".."))
			throw new IllegalArgumentException("Parameter of file can not contains \"..\"");

		InputStream inputStream = null;
		String fullFile;	// String fullFile = PathUtil.getWebRootPath() + file;
		if (file.startsWith(File.separator))
			fullFile = PathKit.getWebRootPath() + File.separator + "WEB-INF" + file;
		else
			fullFile = PathKit.getWebRootPath() + File.separator + "WEB-INF" + File.separator + file;

		try {
			inputStream = new FileInputStream(new File(fullFile));
			BufferedReader bf = new BufferedReader(new InputStreamReader(inputStream,"utf-8"));
			properties.load(bf);
		} catch (FileNotFoundException e) {
			throw new IllegalArgumentException("Properties file not found: " + fullFile);
		} catch (IOException e) {
			throw new IllegalArgumentException("Properties file can not be loading: " + fullFile);
		}
		finally {
			try {if (inputStream != null) inputStream.close();} catch (IOException e) {e.printStackTrace();}
		}
		if (properties == null)
			throw new RuntimeException("Properties file loading failed: " + fullFile);
		return properties;
	}
	//监控字典表
	private void loadJkZidianDb(){
		List<Record> list = Db.find("select t.* from b_code t ");
		for(Record record:list){
			String aaa100 = record.getStr("TYPE");//类别
			String aaa102 = record.getStr("CODE");//编号
			String aaa103 = record.getStr("VALUE");//值
			if(jkzidian.containsKey(aaa100)){
				Map<String,String> map = jkzidian.get(aaa100);
				map.put(aaa102, aaa103);
			}else{
				Map<String,String> map = new HashMap<String,String>();
				map.put(aaa102, aaa103);
				jkzidian.put(aaa100, map);
			}
			if(jkzidianList.containsKey(aaa100)){
				List<Record> listRecord = jkzidianList.get(aaa100);
				listRecord.add(record);
			}else{
				List<Record> listRecord = new ArrayList<Record>();
				listRecord.add(record);
				jkzidianList.put(aaa100, listRecord);
			}

		}
	}
	//加载菜单信息
	public static void loadMenuDb(){
		menuList.clear();
		menuofMap.clear();
		List<Record> list = Db.find("select * from ts_menu where stat = '1' order by sort");
		for(Record e:list){
			menuList.add(e);
			if(menuofMap.get(e.get("name"))==null){
				List<Record> elist = new ArrayList(); 
				elist.add(e);
				menuofMap.put(e.getStr("name"), elist);
			}else{
				List<Record> elist = menuofMap.get(e.get("name"));
				elist.add(e);
			}
		}
		
	}
	
	
}
