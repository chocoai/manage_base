package cn.com.jandar.config;

import javax.servlet.http.HttpServletRequest;

import cn.com.jandar.action.admin.AdminBaseController;
import cn.com.jandar.action.admin.IndexController;
import cn.com.jandar.plugin.DicPlugin;
import cn.com.jandar.plugin.BaseHandler;

import com.jfinal.config.Constants;
import com.jfinal.config.Handlers;
import com.jfinal.config.Interceptors;
import com.jfinal.config.JFinalConfig;
import com.jfinal.config.Plugins;
import com.jfinal.config.Routes;
import com.jfinal.ext.handler.UrlSkipHandler;
import com.jfinal.ext.interceptor.SessionInViewInterceptor;
import com.jfinal.ext.plugin.tablebind.AutoTableBindPlugin;
import com.jfinal.ext.plugin.tablebind.SimpleNameStyles;
import com.jfinal.plugin.activerecord.CaseInsensitiveContainerFactory;
import com.jfinal.plugin.druid.DruidPlugin;
import com.jfinal.plugin.druid.DruidStatViewHandler;
import com.jfinal.plugin.druid.IDruidStatViewAuth;
import com.jfinal.render.FreeMarkerRender;

import cty.kit.route.AutoBindRoutes;

public class Config extends JFinalConfig {

	@Override
	public void configConstant(Constants me) {
		loadPropertyFile("Dbconfig.properties");// 加载少量必要配置，随后可用getProperty(...)获取值
		me.setDevMode(getPropertyToBoolean("devMode"));
		me.setError404View("/admin/common/error_global.html");
		me.setError500View("/admin/common/error_global.html");
	}

	@Override
	public void configRoute(Routes me) {
		me.add(new AutoBindRoutes().addExcludeClass(AdminBaseController.class)
				.addExcludeResource(IndexController.class));
	}

	@Override
	public void configPlugin(Plugins me) {
		DruidPlugin druidPlugin = new DruidPlugin(getProperty("jdbcUrl"),
				getProperty("user"), getProperty("password"),
				getProperty("classdriver"));
		AutoTableBindPlugin autoTableBindPlugin = new AutoTableBindPlugin(
				druidPlugin, SimpleNameStyles.LOWER_UNDERLINE);
		autoTableBindPlugin.setShowSql(true);
		autoTableBindPlugin.setAutoScan(false);
		autoTableBindPlugin
				.setContainerFactory(new CaseInsensitiveContainerFactory());
		me.add(druidPlugin);
		me.add(autoTableBindPlugin);
		me.add(new DicPlugin());
		// me.add(new SchedulerPlugin());
	}

	@Override
	public void configInterceptor(Interceptors me) {
		me.add(new SessionInViewInterceptor());
	}

	@Override
	public void configHandler(Handlers me) {
		me.add(new BaseHandler());
		me.add(new UrlSkipHandler("/", true));
		DruidStatViewHandler dvh = new DruidStatViewHandler("/admin/druid",
				new IDruidStatViewAuth() {
					public boolean isPermitted(HttpServletRequest request) {// 获得查看权限
						return true;
					}
				});
		me.add(dvh);
	}

	@Override
	public void afterJFinalStart() {

		FreeMarkerRender
				.setProperties(loadPropertyFile("freemarker.properties"));
		// AutoBindRoutes.synResource();

		FreeMarkerRender.setProperties(loadPropertyFile("freemarker.properties"));
		AutoBindRoutes.synResource();

		super.afterJFinalStart();
	}

}
